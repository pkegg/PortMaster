# Common functions for interacting with the 'dialog' CLI to provide configuration/etc
# before launching a port
HEIGHT="15"
WIDTH="55"
function dialog_initialize() {
  __DIALOG_BACKTITLE="$1"
  local os
  os="$(get_os)"
  local esudo
  esudo="$(get_sudo)"
  local device
  device="$(get_device)"
  if [ "${os}" == "351ELEC" ]; then
    LANG="" #Ensures lines are drawn properly even when ES sets LANG
  fi
  export TERM=linux
  export XDG_RUNTIME_DIR=/run/user/$UID/

  if [[ "${device}" == "rg351p" || "${device}" == "rg351v" ]]; then
    if [[ "${os}" == "ArkOS" ]]; then
      $esudo setfont /usr/share/consolefonts/Lat7-Terminus20x10.psf.gz
      HEIGHT="20"
      WIDTH="60"
    fi
  elif [[ "${device}" == "ogs" ]]; then
    $esudo setfont /usr/share/consolefonts/Lat7-Terminus20x10.psf.gz
    HEIGHT="20"
    WIDTH="60"
  elif [[ "${device}" == "chi" ]]; then
    $esudo setfont /usr/share/consolefonts/Lat7-Terminus20x10.psf.gz
    HEIGHT="20"
    WIDTH="60"
  fi
  install_package curl
  
  # check_install dialog
  if ! check_package dialog; then
    install_package "dialog"
    if [[ "$os" == "ArkOS" && "$device" == "rg351p" ]]; then
  	  #Make sure sdl2 wasn't impacted by the install of dialog for the 351P/M
      $esudo ln -sfv /usr/lib/aarch64-linux-gnu/libSDL2-2.0.so.0.14.1 /usr/lib/aarch64-linux-gnu/libSDL2-2.0.so.0
  	  $esudo ln -sfv /usr/lib/arm-linux-gnueabihf/libSDL2-2.0.so.0.10.0 /usr/lib/arm-linux-gnueabihf/libSDL2-2.0.so.0
    fi
  fi
  if [[ "ArkOS" == "${os}" ]]; then
    $esudo timedatectl set-ntp 1
  fi
  __TMP_FILE=$(mktemp dialog.XXX 2>/dev/null) || __TMP_FILE=/tmp/dialog-$$
  console_clear
  run_at_exit dialog_exit
}
function dialog_exit() {
  echo_err "removing dialog temp file: ${__TMP_FILE}"
  rm -f "${__TMP_FILE}"
}

function dialog_msg() {
  local message="$2"
  local title="$1"
  local console
  console="$(get_console)"
  dialog --clear --backtitle "${__DIALOG_BACKTITLE}" --title "${title}" \
  --msgbox "\n${message}" $HEIGHT $WIDTH &> "${console}"

}
function dialog_yes_no() {
  local message="$2"
  local title="$1"
  local console
  console="$(get_console)"
  if dialog --clear --backtitle "${__DIALOG_BACKTITLE}" --title "${title}" \
  --yesno "\n${message}" $HEIGHT $WIDTH &> "${console}"; then
    return 0
  fi
  return 1
}

function dialog_clear() {
  dialog --clear --stdout
}

function dialog_menu() {
  local title="$1"
  local message="$2"
  local cancel_label="$3"
  shift
  shift
  shift
  local options=($@)
  local console
  console="$(get_console)"

  dialog_options=""

  if [[ "${console}" == "/dev/stdout" ]]; then
    dialog_options="--stdout"
  fi
  dialog \
     --backtitle "${__DIALOG_BACKTITLE}" ${dialog_options} \
     --title "$title" \
     --no-collapse \
     --clear \
     --cancel-label "$cancel_label" \
     --menu "${message}" $HEIGHT $WIDTH 15 ${options[@]} 2> $__TMP_FILE 1> "${console}"
                                                                                                                                              
  cat "$__TMP_FILE"
}

function dialog_download() {
  local url="$1"
  local file="$2"
  local message="$3"
  local console
  console="$(get_console)"
  local esudo
  esudo="$(get_sudo)"

  echo_err "download: $url file: $file message: $message console: $console"
  install_package wget
  if $esudo $(get_wget) -t 3 -T 60 -q --show-progress "${url}" -O ${file} 2>&1 | stdbuf -oL sed -E 's/\.\.+/---/g'| dialog \
                     --progressbox "$message" "$HEIGHT" "$WIDTH" &> ${console}; then
    return 0
  else
    return 1
  fi
}
